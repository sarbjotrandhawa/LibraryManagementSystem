
package com.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "EmployeeService", targetNamespace = "http://service.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface EmployeeService {


    /**
     * 
     * @param arg0
     * @throws Exception_Exception
     */
    @WebMethod(operationName = "InsertEmployee")
    @RequestWrapper(localName = "InsertEmployee", targetNamespace = "http://service.com/", className = "com.service.InsertEmployee")
    @ResponseWrapper(localName = "InsertEmployeeResponse", targetNamespace = "http://service.com/", className = "com.service.InsertEmployeeResponse")
    @Action(input = "http://service.com/EmployeeService/InsertEmployeeRequest", output = "http://service.com/EmployeeService/InsertEmployeeResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://service.com/EmployeeService/InsertEmployee/Fault/Exception")
    })
    public void insertEmployee(
        @WebParam(name = "arg0", targetNamespace = "")
        Employee arg0)
        throws Exception_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<com.service.Employee>
     * @throws Exception_Exception
     */
    @WebMethod(operationName = "DisplayEmployees")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "DisplayEmployees", targetNamespace = "http://service.com/", className = "com.service.DisplayEmployees")
    @ResponseWrapper(localName = "DisplayEmployeesResponse", targetNamespace = "http://service.com/", className = "com.service.DisplayEmployeesResponse")
    @Action(input = "http://service.com/EmployeeService/DisplayEmployeesRequest", output = "http://service.com/EmployeeService/DisplayEmployeesResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://service.com/EmployeeService/DisplayEmployees/Fault/Exception")
    })
    public List<Employee> displayEmployees()
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns com.service.Employee
     * @throws Exception_Exception
     */
    @WebMethod(operationName = "DisplayEmployeeById")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "DisplayEmployeeById", targetNamespace = "http://service.com/", className = "com.service.DisplayEmployeeById")
    @ResponseWrapper(localName = "DisplayEmployeeByIdResponse", targetNamespace = "http://service.com/", className = "com.service.DisplayEmployeeByIdResponse")
    @Action(input = "http://service.com/EmployeeService/DisplayEmployeeByIdRequest", output = "http://service.com/EmployeeService/DisplayEmployeeByIdResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://service.com/EmployeeService/DisplayEmployeeById/Fault/Exception")
    })
    public Employee displayEmployeeById(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns int
     * @throws Exception_Exception
     * @throws NonexistentEntityException_Exception
     */
    @WebMethod(operationName = "UpdateEmployee")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "UpdateEmployee", targetNamespace = "http://service.com/", className = "com.service.UpdateEmployee")
    @ResponseWrapper(localName = "UpdateEmployeeResponse", targetNamespace = "http://service.com/", className = "com.service.UpdateEmployeeResponse")
    @Action(input = "http://service.com/EmployeeService/UpdateEmployeeRequest", output = "http://service.com/EmployeeService/UpdateEmployeeResponse", fault = {
        @FaultAction(className = NonexistentEntityException_Exception.class, value = "http://service.com/EmployeeService/UpdateEmployee/Fault/NonexistentEntityException"),
        @FaultAction(className = Exception_Exception.class, value = "http://service.com/EmployeeService/UpdateEmployee/Fault/Exception")
    })
    public int updateEmployee(
        @WebParam(name = "arg0", targetNamespace = "")
        Employee arg0)
        throws Exception_Exception, NonexistentEntityException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns int
     * @throws NonexistentEntityException_Exception
     */
    @WebMethod(operationName = "DeleteEmployee")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "DeleteEmployee", targetNamespace = "http://service.com/", className = "com.service.DeleteEmployee")
    @ResponseWrapper(localName = "DeleteEmployeeResponse", targetNamespace = "http://service.com/", className = "com.service.DeleteEmployeeResponse")
    @Action(input = "http://service.com/EmployeeService/DeleteEmployeeRequest", output = "http://service.com/EmployeeService/DeleteEmployeeResponse", fault = {
        @FaultAction(className = NonexistentEntityException_Exception.class, value = "http://service.com/EmployeeService/DeleteEmployee/Fault/NonexistentEntityException")
    })
    public int deleteEmployee(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0)
        throws NonexistentEntityException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns com.service.Employee
     * @throws NonexistentEntityException_Exception
     */
    @WebMethod(operationName = "SearchEmployeeById")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "SearchEmployeeById", targetNamespace = "http://service.com/", className = "com.service.SearchEmployeeById")
    @ResponseWrapper(localName = "SearchEmployeeByIdResponse", targetNamespace = "http://service.com/", className = "com.service.SearchEmployeeByIdResponse")
    @Action(input = "http://service.com/EmployeeService/SearchEmployeeByIdRequest", output = "http://service.com/EmployeeService/SearchEmployeeByIdResponse", fault = {
        @FaultAction(className = NonexistentEntityException_Exception.class, value = "http://service.com/EmployeeService/SearchEmployeeById/Fault/NonexistentEntityException")
    })
    public Employee searchEmployeeById(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0)
        throws NonexistentEntityException_Exception
    ;

}
